---
import portfolioImage from "../public/images/portfolio.svg";
import astroIcon from "../public/images/astroIcon.svg";
import tailwindIcon from "../public/images/tailwindIcon.png";
import { Image } from 'astro:assets';

const {image,description,title} = Astro.props;
---

{
  true ? (
    <div class="h-screen overflow-hidden killMe  md:p-20 p-8 relative">
      <div class="h-full  flex flex-col border-4 md:border-r-0 rounded-xl drop-shadow-3xl border-dark bg-orange">
        <p class="text-xl  md:text-3xl flex justify-between items-center text-dark border-2 border-b-4 rounded-t-md border-dark p-4 bg-secondary">
            {title} <img class="h-14" src={portfolioImage.src} />
        </p>

          <div class="h-full w-full flex flex-col md:flex-row">
              <div class=" h-1/2 md:h-3/4 w-full md:w-1/2  mt-2 mx-4 pr-8 md:pr-0 ">
                  <Image loading="lazy" src={image} alt="test" class=" object-cover object-top  h-full w-full border-4 md:border-r-0 rounded-xl drop-shadow-3xl border-dark "/>
              </div>


              <p class="text-xl w-full md:w-1/2  md:text-3xl p-6 text-dark">
                  {description}
              </p>


          </div>




       <!--  <div class="flex justify-around items-center bg-amber-400">
          <img class="h-14 w-14" src={astroIcon} />
          <img class="h-14 w-14" src={tailwindIcon} />
        </div>
      -->
      </div>
    </div>
        ) : (
    <div class="h-screen overflow-hidden killMe  md:pl-0 md:p-20 p-4">
      <div class="h-full bg-primary border-4 md:border-l-0 border-dark rounded-xl drop-shadow-3xl p-12">
        <h2 class="text-4xl">HI MY NAME IS PROJECT</h2>
      </div>
    </div>
  )
}

<script>
  import {gsap} from "gsap";

  let target = document.querySelectorAll(".killMe");

  const observer = new IntersectionObserver((entrie) => {

    entrie.forEach((element) => {

      if (
        element.isIntersecting
      ) {

          gsap.to(element.target,{left:0,duration:2,ease: "elastic.out(1,1)",force3D: true,z:0})
      }
      else {
          gsap.to(element.target,{left:"45%",duration:2, ease: "elastic.out(1,1)",force3D: true,z:0})

      }

    });
  },{
      threshold:0.4,
  });

  target.forEach((target) => {
    observer.observe(target);
  });
</script>
